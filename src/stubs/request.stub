<?php

namespace @requestNamespace;

use Illuminate\Foundation\Http\FormRequest;

/**
 * @requestClass
 *
 * Form request for validating @modelName data.
 *
 * @package @requestNamespace
 */
class @requestClass extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     *
     * @return bool
     */
    public function authorize()
    {
        return true; // Customize authorization logic here
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array
     */
    public function rules()
    {
        $rules = [
@validationRules
        ];

        // Customize rules based on request method
        if ($this->isMethod('PUT') || $this->isMethod('PATCH')) {
            // Rules for update (may exclude required for some fields)
            $rules = $this->updateRules($rules);
        }

        return $rules;
    }

    /**
     * Get custom attributes for validator errors.
     *
     * @return array
     */
    public function attributes()
    {
        return [
@fieldAttributes
        ];
    }

    /**
     * Get custom messages for validator errors.
     *
     * @return array
     */
    public function messages()
    {
        return [
            // Add custom validation messages here
        ];
    }

    /**
     * Modify rules for update operations.
     *
     * @param array $rules
     * @return array
     */
    private function updateRules(array $rules)
    {
        // Example: Make 'required' fields 'sometimes' for updates
        foreach ($rules as $field => $rule) {
            if (is_string($rule) && str_contains($rule, 'required')) {
                $rules[$field] = str_replace('required', 'sometimes|required', $rule);
            }
        }

        return $rules;
    }
}
